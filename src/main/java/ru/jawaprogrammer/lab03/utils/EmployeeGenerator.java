package ru.jawaprogrammer.lab03.utils;

import ru.jawaprogrammer.lab03.entities.Employee;
import ru.jawaprogrammer.lab03.entities.EmployeeBuilder;

import java.util.*;

public class EmployeeGenerator {
    private final static HashMap<Integer, String> REGIONS = new HashMap<>(89);

    private static final String[] MALE_NAMES = new String[]{"Степан", "Дмитрий", "Владимир", "Артём", "Денис", "Михаил", "Никита", "Леонид", "Иван", "Макар", "Максим", "Даниил", "Кирилл", "Павел", "Ярослав", "Николай", "Андрей", "Всеволод", "Мирон", "Виктор", "Руслан", "Мирослав", "Алексей", "Давид", "Юрий", "Матвей", "Егор", "Захар", "Сергей", "Георгий", "Александр", "Артур", "Леон", "Семён", "Лев", "Роман", "Платон", "Константин", "Вадим", "Яков", "Артемий", "Илья", "Демид", "Григорий", "Савелий", "Марк", "Игнат", "Даниэль", "Арсений", "Родион", "Евгений", "Глеб", "Тимофей", "Серафим", "Эмир", "Вячеслав", "Дамир", "Игорь", "Владислав", "Лука", "Билал", "Ростислав", "Марсель", "Богдан", "Гордей", "Тимур", "Савва", "Борис", "Адам", "Герман", "Али", "Елисей", "Пётр", "Фёдор", "Данила", "Олег", "Роберт", "Альберт", "Тихон", "Валерий", "Ян", "Святослав", "Эмиль", "Василий", "Камиль", "Добрыня", "Антон", "Тигран", "Данил", "Эмин", "Эрик", "Филипп", "Ибрагим", "Арсен", "Клим", "Демьян", "Мартин", "Яромир", "Станислав", "Анатолий",};
    private static final String[] MALE_SURNAMES = new String[]{"Копылов", "Ефремов", "Степанов", "Казаков", "Королев", "Пастухов", "Ермолов", "Беляев", "Орлов", "Данилов", "Фролов", "Литвинов", "Вешняков", "Лебедев", "Колесников", "Волков", "Иванов", "Калинин", "Суслов", "Белов", "Жуков", "Макаров", "Калинин", "Миронов", "Гусев", "Борисов", "Матвеев", "Петров", "Сидоров", "Иванов", "Панфилов", "Аксенов", "Егоров", "Бирюков", "Афанасьев", "Алексеев", "Баженов", "Маслов", "Борисов", "Басов", "Горохов", "Владимиров", "Румянцев", "Быков", "Петров", "Лебедев", "Соловьев", "Волков", "Андреев", "Анохин", "Степанов", "Лебедев", "Комаров", "Рогов", "Петров", "Федотов", "Ковалев", "Тихомиров", "Орехов", "Горелов", "Бородин", "Петров", "Верещагин", "Куликов", "Козлов", "Попов", "Горбачев", "Дубровин", "Наумов", "Родионов", "Лобанов", "Михайлов", "Сидоров", "Соловьев", "Борисов", "Кириллов", "Жаров", "Петухов", "Коротков", "Филатов", "Симонов", "Архипов", "Никулин", "Петухов", "Наумов", "Федоров", "Орлов", "Тарасов", "Алексеев", "Голубев", "Панов", "Дмитриев", "Беляев", "Быков", "Бычков", "Дорофеев", "Иванов", "Иванов", "Кудрявцев", "Румянцев",};

    private static final String[] FEMALE_NAMES = new String[]{"Виктория", "Елена", "Милана", "Злата", "Валерия", "Ева", "Марианна", "Алиса", "София", "Мария", "Диана", "Анна", "Вероника", "Кира", "Марьяна", "Дарья", "Майя", "Ксения", "Елизавета", "Эмилия", "Марина", "Анастасия", "Полина", "Александра", "Лада", "Мирослава", "Есения", "Ульяна", "Яна", "Софья", "Надежда", "Варвара", "Олеся", "Карина", "Малика", "Маргарита", "Ясмина", "Арина", "Алина", "Сафия", "Аделина", "Таисия", "Василиса", "Лидия", "Амира", "Евгения", "Екатерина", "Мия", "Кристина", "Татьяна", "Элина", "Стефания", "Ярослава", "Ариана", "Марьям", "Теона", "Ника", "Адель", "Юлия", "Нина", "Вера", "Мадина", "Ирина", "Николь", "Амина", "Алёна", "Пелагея", "Аяна", "Камилла", "Евдокия", "Ангелина", "Дарина", "Мелания", "Ольга", "Лилия", "Фатима", "Амалия", "Аиша", "Алия", "Каролина", "Амелия", "Мила", "Эвелина", "Серафима", "Наталья", "Алеся", "Светлана", "Оливия", "Альбина", "Агата", "Зоя", "Любовь", "Мира", "Камила", "Виолетта", "Лиана", "Валентина", "Аврора", "Афина", "Агния",};
    private static final String[] FEMALE_SURNAMES = new String[]{"Полякова", "Борисова", "Зуева", "Емельянова", "Короткова", "Панова", "Крюкова", "Романова", "Жукова", "Захарова", "Сазонова", "Петрова", "Яковлева", "Спиридонова", "Маркина", "Маркелова", "Макеева", "Титова", "Громова", "Крылова", "Никонова", "Попова", "Лебедева", "Гришина", "Волкова", "Смирнова", "Назарова", "Николаева", "Соловьева", "Карташова", "Николаева", "Воробьева", "Баранова", "Титова", "Зайцева", "Мельникова", "Круглова", "Щербакова", "Тарасова", "Сахарова", "Козлова", "Демидова", "Кузьмина", "Кочетова", "Данилова", "Соколова", "Соболева", "Алешина", "Соколова", "Филимонова", "Ковалева", "Белова", "Акимова", "Лебедева", "Щеглова", "Ширяева", "Родина", "Исакова", "Зайцева", "Романова", "Головина", "Грачева", "Панкратова", "Смирнова", "Александрова", "Аксенова", "Лазарева", "Карташова", "Ушакова", "Кулешова", "Левина", "Михайлова", "Козлова", "Нечаева", "Маслова", "Матвеева", "Ермакова", "Бурова", "Быкова", "Нефедова", "Тихомирова", "Мельникова", "Краснова", "Измайлова", "Романова", "Лаврова", "Комарова", "Кочергина", "Михайлова", "Емельянова", "Добрынина", "Борисова", "Дмитриева", "Зубкова", "Шарова", "Тихомирова", "Ермакова", "Ефремова", "Голованова", "Нечаева",};

    private static final String[] COMMON_CITIES = new String[]{"Перово", "Иваново", "Бухловка", "Лисичкино", "Вороново", "Апрелевка", "Париж", "Омашу"};
    private static final String[] COMMON_STREETS = new String[]{"ул. Футбольная", "Ленинский пр-кт", "ул. Садовая", "ул. Центральная", "ул. Московская", "Косой переулок", "Китай-город"};

    private static final String[] EMAIL_DOMAINS = new String[]{"gmail.com", "mail.ru", "rambler.ru", "vk.com", "yandex.ru"};

    static {
        REGIONS.put(1, "Республика Адыгея (Адыгея)");
        REGIONS.put(2, "Республика Башкортостан");
        REGIONS.put(3, "Республика Бурятия");
        REGIONS.put(4, "Республика Алтай");
        REGIONS.put(5, "Республика Дагестан");
        REGIONS.put(6, "Республика Ингушетия");
        REGIONS.put(7, "Кабардино-Балкарская Республика");
        REGIONS.put(8, "Республика Калмыкия");
        REGIONS.put(9, "Карачаево-Черкесская Республика");
        REGIONS.put(10, "Республика Карелия");
        REGIONS.put(11, "Республика Коми");
        REGIONS.put(12, "Республика Марий Эл");
        REGIONS.put(13, "Республика Мордовия");
        REGIONS.put(14, "Республика Саха (Якутия)");
        REGIONS.put(15, "Республика Северная Осетия - Алания");
        REGIONS.put(16, "Республика Татарстан (Татарстан)");
        REGIONS.put(17, "Республика Тыва");
        REGIONS.put(18, "Удмуртская Республика");
        REGIONS.put(19, "Республика Хакасия");
        REGIONS.put(20, "Чеченская Республика");
        REGIONS.put(21, "Чувашская Республика - Чувашия");
        REGIONS.put(22, "Алтайский край");
        REGIONS.put(23, "Краснодарский край");
        REGIONS.put(24, "Красноярский край");
        REGIONS.put(25, "Приморский край");
        REGIONS.put(26, "Ставропольский край");
        REGIONS.put(27, "Хабаровский край");
        REGIONS.put(28, "Амурская область");
        REGIONS.put(29, "Архангельская область");
        REGIONS.put(30, "Астраханская область");
        REGIONS.put(31, "Белгородская область");
        REGIONS.put(32, "Брянская область");
        REGIONS.put(33, "Владимирская область");
        REGIONS.put(34, "Волгоградская область");
        REGIONS.put(35, "Вологодская область");
        REGIONS.put(36, "Воронежская область");
        REGIONS.put(37, "Ивановская область");
        REGIONS.put(38, "Иркутская область");
        REGIONS.put(39, "Калининградская область");
        REGIONS.put(40, "Калужская область");
        REGIONS.put(41, "Камчатский край");
        REGIONS.put(42, "Кемеровская область");
        REGIONS.put(43, "Кировская область");
        REGIONS.put(44, "Костромская область");
        REGIONS.put(45, "Курганская область");
        REGIONS.put(46, "Курская область");
        REGIONS.put(47, "Ленинградская область");
        REGIONS.put(48, "Липецкая область");
        REGIONS.put(49, "Магаданская область");
        REGIONS.put(50, "Московская область");
        REGIONS.put(51, "Мурманская область");
        REGIONS.put(52, "Нижегородская область");
        REGIONS.put(53, "Новгородская область");
        REGIONS.put(54, "Новосибирская область");
        REGIONS.put(55, "Омская область");
        REGIONS.put(56, "Оренбургская область");
        REGIONS.put(57, "Орловская область");
        REGIONS.put(58, "Пензенская область");
        REGIONS.put(59, "Пермский край");
        REGIONS.put(60, "Псковская область");
        REGIONS.put(61, "Ростовская область");
        REGIONS.put(62, "Рязанская область");
        REGIONS.put(63, "Самарская область");
        REGIONS.put(64, "Саратовская область");
        REGIONS.put(65, "Сахалинская область");
        REGIONS.put(66, "Свердловская область");
        REGIONS.put(67, "Смоленская область");
        REGIONS.put(68, "Тамбовская область");
        REGIONS.put(69, "Тверская область");
        REGIONS.put(70, "Томская область");
        REGIONS.put(71, "Тульская область");
        REGIONS.put(72, "Тюменская область");
        REGIONS.put(73, "Ульяновская область");
        REGIONS.put(74, "Челябинская область");
        REGIONS.put(75, "Забайкальский край");
        REGIONS.put(76, "Ярославская область");
        REGIONS.put(77, "г. Москва");
        REGIONS.put(78, "Санкт-Петербург");
        REGIONS.put(79, "Еврейская автономная область");
        /*REGIONS.put(83, "Ненецкий автономный округ");
        REGIONS.put(86, "Ханты-Мансийский автономный округ - Югра");
        REGIONS.put(87, "Чукотский автономный округ");
        REGIONS.put(89, "Ямало-Ненецкий автономный округ");*/
    }

    private static Random rand = new Random();

    private static final Integer[] PHONE_CODES = new Integer[]{909, 906, 916, 925, 939, 930};

    private static <T> T getRandomFromArray(T[] arr) {
        int pos = rand.nextInt(arr.length);
        return arr[pos];
    }

    public static List<Employee> generate(int amount) {
        LinkedList<Employee> ret = new LinkedList<>();
        for (int i = 0; i < amount; ++i) {
            EmployeeBuilder builder = new EmployeeBuilder();
            int code = rand.nextInt(79) + 1;
            builder.setCode(code);
            builder.setState(REGIONS.get(code));
            String phone = new StringBuilder("+7 (")
                    .append(getRandomFromArray(PHONE_CODES))
                    .append(") ")
                    .append(rand.nextInt(10))
                    .append(rand.nextInt(10))
                    .append(rand.nextInt(10))
                    .append("-")
                    .append(rand.nextInt(10))
                    .append(rand.nextInt(10))
                    .append("-")
                    .append(rand.nextInt(10))
                    .append(rand.nextInt(10)).toString();
            builder.setPhone(phone);
            StringBuilder mail = new StringBuilder();
            int chars = rand.nextInt(20) + 5;
            for (int j = 0; j < chars; ++j) mail.append((char) ('a' + rand.nextInt(26)));
            mail.append('@').append(getRandomFromArray(EMAIL_DOMAINS));
            builder.setEmail(mail.toString());
            builder.setCity(getRandomFromArray(COMMON_CITIES));
            builder.setAddress(new StringBuilder(getRandomFromArray(COMMON_STREETS)).append(", ").append(rand.nextInt(50) + 1).toString());
            builder.setRole(Employee.Role.values()[rand.nextInt(3)]);
            builder.setDept(rand.nextInt(5) + 1);
            builder.setAge(rand.nextInt(30) + 20);
            if (rand.nextBoolean())// мужчина
            {
                builder.setGender(Employee.Gender.MALE);
                builder.setGivenName(getRandomFromArray(MALE_NAMES));
                builder.setSurName(getRandomFromArray(MALE_SURNAMES));
            } else { // женщина
                builder.setGender(Employee.Gender.FEMALE);
                builder.setGivenName(getRandomFromArray(FEMALE_NAMES));
                builder.setSurName(getRandomFromArray(FEMALE_SURNAMES));
            }
            ret.add(builder.create());
        }
        return ret;
    }
}
